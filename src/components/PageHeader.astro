---
import Breadcrumbs from "./Breadcrumbs.astro";
import type { BreadcrumbLink } from "./Breadcrumbs.astro";
import Icon from "./Icon.astro";

export interface Props {
	breadcrumbs?: BreadcrumbLink[]
}

const { breadcrumbs = [] } = Astro.props

interface MenuItem {
	current: boolean
	href: string
	title: string
}

const menuItems: MenuItem[] = [{
	current: false,
	href: '/',
	title: 'Etusivu'
}, {
	current: false,
	href: '/meetups',
	title: 'Miitit'
}, {
	current: false,
	href: '/places',
	title: 'Paikat'
}, {
	current: false,
	href: '/profile',
	title: 'Omat tiedot'
}]

const currentPageHref = new URL(Astro.request.url).pathname
const currentPage = menuItems.find(item => item.href === currentPageHref)

if (currentPage) {
	currentPage.current = true
} else {
	const hrefs: string[] = breadcrumbs
		.map(({ href }: BreadcrumbLink): string => href!)
		.filter((href: string) => href !== '/')

	const currentItem = menuItems.reduce<MenuItem | null>(
		(biggestItem, item) => hrefs.find((href) => href === item.href) ? item : biggestItem,
		null
	)

	if (currentItem) currentItem.current = true
}

---

<nav>
	<a class="jump-to-content" aria-hidden="false" hidden href="#main">Hyppää sisältöön</a>
	<ul>
		{menuItems.map(item => <li>
			<a href={ item.href } aria-current={item.current ? 'page' : undefined}>{item.title === 'Etusivu' ?
				<Icon href="/icons/home-1.svg" title="Etusivu" /> : item.title}
			</a>
		</li>)}
	</ul>
</nav>
<header class={import.meta.env.DEV ? 'test-environment' : undefined}>
	<img alt="" aria-hidden="true" height="73" width="73" src="/assets/2018-07-14_tengwa_mellon.png" />
	Mellon
</header>
<Breadcrumbs links={breadcrumbs}>
	<slot />
</Breadcrumbs>
<style>
	header {
		border-bottom: thin solid var(--border-color);
		border-top: thin solid rgba(0, 0, 0, 0.375);
		box-shadow: 0 1px 1em rgba(0, 0, 0, 0.125);
		color: black;
		font-family: var(--font-serif);
		font-size: 3.75rem;
		font-weight: bold;
		padding-block: 1rem;
		position: relative;
		text-align: center;
	}

	.test-environment {
		background-image: url('/assets/under-construction.gif');
		background-position: right center;
	}

	header::before {
		background-image:
			url('/assets/noise.png'),
			linear-gradient(rgba(40, 80, 20, 0.5), rgba(20, 40, 10, 0.25) 0.75rem, transparent 95%),
			radial-gradient(circle at 50%, rgba(255, 255, 255, 0) 9rem, var(--bg-light-color-alt) 10rem, hsl(35deg, 33%, 80%) 19rem, var(--border-color) 66%, var(--border-color) 75%, var(--bg-light-color) 125%);
		background-position: center;
		background-repeat: repeat;
		background-size: auto, auto, 100% 100%;
		content: '';
		inset: 0;
		opacity: 0.625;
		pointer-events: none;
		position: absolute;
	}

	ul {
		--focus-color: white;
		display: flex;
		flex-wrap: wrap;
		font-weight: bold;
		justify-content: center;
		gap: 0 0.5rem;
		margin: 0;
	}

	li {
		display: inline;
	}

	nav {
		background-color: var(--link-color);
		background-image:
			linear-gradient(to bottom, rgba(255, 255, 255, 0.0625), rgba(255, 255, 255, 0)),
			radial-gradient(circle at 0%, rgba(255, 255, 255, 0.125), rgba(255, 255, 255, 0)),
			url('/assets/noise.png');
		background-repeat: repeat;
		border-block: thin solid #694916;
		box-shadow: inset 0 0 1em rgba(0, 0, 0, 0.375), 0 3px 2px rgba(0, 0, 0, 0.125);
		position: relative;
		z-index: 1;
	}

	ul a:focus {
		position: relative;
	}

	ul a {
		--link-color: var(--bg-light-color);
		align-items: center;
		display: flex;
		height: 100%;
		justify-content: center;
		padding: 0.5rem;
	}

	ul a :global(svg) {
		height: auto;
		width: 1.25em;
	}

	ul a:not(:is(:focus, :hover, :active)) {
		text-shadow: 0 0 0.375rem rgba(0, 0, 0, 0.5);
		-webkit-text-stroke: 0.5px rgba(0, 0, 0, 0.5);
		text-decoration: none;
	}

	ul a:not(:is(:focus, :hover, :active)) :global(svg) {
		filter: drop-shadow(0 0 0.375rem rgba(0, 0, 0, 0.375));
	}

	ul a[aria-current="page"] {
		--link-color: black;
		background: var(--bg-light-color-alt);
		box-shadow: inset 0 0 0 1px var(--border-color), 0 0 0.5rem var(--border-color);
		margin: 0 -0.375rem;
		padding: 0.5rem 0.875rem;
		text-shadow: unset;
	}

	ul a:not([aria-current="page"]):hover :global(svg) {
		transform: scale(1.25);
	}

	.jump-to-content {
		position: absolute;
		top: 3.125rem;
		left: 50%;
		font-weight: bold;
		transform: translateX(-50%)
	}

	@media (min-width: 40em) {
		nav {
			font-size: 1.125rem;
		}

		.jump-to-content {
			top: 3.375rem;
		}
	}
</style>
