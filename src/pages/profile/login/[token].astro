---
import { getJwtPayload, getLoginCookie } from "$/lib/auth";
import { sql } from "$/lib/db";
import type { Member } from "$/types/db";

const payload = typeof Astro.params.token === 'string' && getJwtPayload(Astro.params.token)
if (!payload || typeof payload.email !== 'string') {
	return Astro.redirect('/profile?dialog=invalid-login-token')
}

const member = (await sql<Member[]>`SELECT * FROM members WHERE email = ${payload.email}`).pop()

const response = Astro.redirect(member ? '/profile/login' : '/profile/register')
response.headers.set('Cache-Control', 'no-cache')
response.headers.set('Set-Cookie', getLoginCookie(`${Astro.params.token}`))
return response

---

